// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Dataforged
{
    [JsonConverter(typeof(OracleTableRollMethodJsonConverter))]
    public enum OracleTableRollMethod
    {
        KeepDuplicates,

        MakeItWorse,

        NoDuplicates,
    }
    public class OracleTableRollMethodJsonConverter : JsonConverter<OracleTableRollMethod>
    {
        public override OracleTableRollMethod Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "keep_duplicates":
                    return OracleTableRollMethod.KeepDuplicates;
                case "make_it_worse":
                    return OracleTableRollMethod.MakeItWorse;
                case "no_duplicates":
                    return OracleTableRollMethod.NoDuplicates;
                default:
                    throw new ArgumentException(String.Format("Bad OracleTableRollMethod value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleTableRollMethod value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleTableRollMethod.KeepDuplicates:
                    JsonSerializer.Serialize<string>(writer, "keep_duplicates", options);
                    return;
                case OracleTableRollMethod.MakeItWorse:
                    JsonSerializer.Serialize<string>(writer, "make_it_worse", options);
                    return;
                case OracleTableRollMethod.NoDuplicates:
                    JsonSerializer.Serialize<string>(writer, "no_duplicates", options);
                    return;
            }
        }
    }
}
