// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Dataforged
{
    [JsonConverter(typeof(DelveSiteDenizenFrequencyJsonConverter))]
    public enum DelveSiteDenizenFrequency
    {
        Common,

        Rare,

        Uncommon,

        Unforeseen,

        VeryCommon,
    }
    public class DelveSiteDenizenFrequencyJsonConverter : JsonConverter<DelveSiteDenizenFrequency>
    {
        public override DelveSiteDenizenFrequency Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "common":
                    return DelveSiteDenizenFrequency.Common;
                case "rare":
                    return DelveSiteDenizenFrequency.Rare;
                case "uncommon":
                    return DelveSiteDenizenFrequency.Uncommon;
                case "unforeseen":
                    return DelveSiteDenizenFrequency.Unforeseen;
                case "very_common":
                    return DelveSiteDenizenFrequency.VeryCommon;
                default:
                    throw new ArgumentException(String.Format("Bad DelveSiteDenizenFrequency value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, DelveSiteDenizenFrequency value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case DelveSiteDenizenFrequency.Common:
                    JsonSerializer.Serialize<string>(writer, "common", options);
                    return;
                case DelveSiteDenizenFrequency.Rare:
                    JsonSerializer.Serialize<string>(writer, "rare", options);
                    return;
                case DelveSiteDenizenFrequency.Uncommon:
                    JsonSerializer.Serialize<string>(writer, "uncommon", options);
                    return;
                case DelveSiteDenizenFrequency.Unforeseen:
                    JsonSerializer.Serialize<string>(writer, "unforeseen", options);
                    return;
                case DelveSiteDenizenFrequency.VeryCommon:
                    JsonSerializer.Serialize<string>(writer, "very_common", options);
                    return;
            }
        }
    }
}
