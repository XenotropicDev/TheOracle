// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Dataforged
{
    [JsonConverter(typeof(OracleTableStyleJsonConverter))]
    public enum OracleTableStyle
    {
        EmbedAsColumn,

        EmbedInRow,

        Table,
    }
    public class OracleTableStyleJsonConverter : JsonConverter<OracleTableStyle>
    {
        public override OracleTableStyle Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "embed_as_column":
                    return OracleTableStyle.EmbedAsColumn;
                case "embed_in_row":
                    return OracleTableStyle.EmbedInRow;
                case "table":
                    return OracleTableStyle.Table;
                default:
                    throw new ArgumentException(String.Format("Bad OracleTableStyle value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleTableStyle value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleTableStyle.EmbedAsColumn:
                    JsonSerializer.Serialize<string>(writer, "embed_as_column", options);
                    return;
                case OracleTableStyle.EmbedInRow:
                    JsonSerializer.Serialize<string>(writer, "embed_in_row", options);
                    return;
                case OracleTableStyle.Table:
                    JsonSerializer.Serialize<string>(writer, "table", options);
                    return;
            }
        }
    }
}
