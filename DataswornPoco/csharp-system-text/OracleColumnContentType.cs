// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Dataforged
{
    [JsonConverter(typeof(OracleColumnContentTypeJsonConverter))]
    public enum OracleColumnContentType
    {
        Description,

        Range_,

        Result,

        Summary,
    }
    public class OracleColumnContentTypeJsonConverter : JsonConverter<OracleColumnContentType>
    {
        public override OracleColumnContentType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "description":
                    return OracleColumnContentType.Description;
                case "range":
                    return OracleColumnContentType.Range_;
                case "result":
                    return OracleColumnContentType.Result;
                case "summary":
                    return OracleColumnContentType.Summary;
                default:
                    throw new ArgumentException(String.Format("Bad OracleColumnContentType value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleColumnContentType value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleColumnContentType.Description:
                    JsonSerializer.Serialize<string>(writer, "description", options);
                    return;
                case OracleColumnContentType.Range_:
                    JsonSerializer.Serialize<string>(writer, "range", options);
                    return;
                case OracleColumnContentType.Result:
                    JsonSerializer.Serialize<string>(writer, "result", options);
                    return;
                case OracleColumnContentType.Summary:
                    JsonSerializer.Serialize<string>(writer, "summary", options);
                    return;
            }
        }
    }
}
